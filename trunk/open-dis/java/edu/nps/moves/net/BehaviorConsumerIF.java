package edu.nps.moves.net;

import edu.nps.moves.dis.*;

/**
 * BehaviorConsumer is the listening part of the listener pattern. The
 * other half of this is the BehaviorProducer interface. This
 * receives data when the BehaviorProducer notifies us of an arriving
 * PDU.
 *
 * @author DMcG
 * @version $Id:$
 */
 
public interface BehaviorConsumerIF
{

  /**
   * Receives a PDU from the BehaviorProducer.
   *
   * @param pdu the Pdu generated by the BehaviorProducer
   * @param producer the producer that generated the call
   */
  public void receivePdu(Pdu pdu, BehaviorProducerIF producer);
  
  /**
   * Does the same as receivePdu(), but can also pass in an arbitrary
   * object with the other information.
   * @param pdu
   * @param producer
   * @param data
   */
  public void receivePdu(Pdu pdu, BehaviorProducerIF producer, Object data);
}
